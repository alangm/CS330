#lang plai/gc2/mutator

;; Output: 'passed

(allocator-setup "mark-and-sweep.rkt" 200)
(define (build-one)
  (let* ((x0 'y)
         (x1 (cons #f #f))
         (x2 (lambda (x) (if (= x 0) x0 x0)))
         (x3 (cons #f #f))
         (x4 (cons x3 #f))
         (x5
          (lambda (x)
            (if (= x 0)
              x3
              (if (= x 1)
                x1
                (if (= x 2)
                  x1
                  (if (= x 3)
                    x3
                    (if (= x 4)
                      x1
                      (if (= x 5) x1 (if (= x 6) x3 (if (= x 7) x4 x2))))))))))
         (x6 #t)
         (x7
          (lambda (x)
            (if (= x 0)
              x5
              (if (= x 1)
                x6
                (if (= x 2) x6 (if (= x 3) x6 (if (= x 4) x6 x3))))))))
    (set-first! x1 x7)
    (set-rest! x1 x4)
    (set-first! x3 x5)
    (set-rest! x3 x6)
    (set-rest! x4 x4)
    x7))
(define (traverse-one x7)
  (let ((res ((first (((first ((first (x7 5)) 2)) 0) 1)) 3)))
    (if (boolean? res) res #f)))
(define (trigger-gc n)
  (if (zero? n) 0 (begin (cons n n) (trigger-gc (- n 1)))))
(define (loop i)
  (if (zero? i)
    'passed
    (let ((obj (build-one)))
      (trigger-gc 200)
      (if (traverse-one obj) (loop (- i 1)) 'failed))))
(loop 200)
